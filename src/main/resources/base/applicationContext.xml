<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <context:annotation-config/>
    <!--扫描整个项目，不同的注解会有不同的处理器进行一些操作 -->
    <context:component-scan base-package="com.yue.first">
        <!--将Controller的注解排除掉 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <import resource="classpath:base/mybatisConfiguration.xml"/>
    <import resource="classpath:base/guavaCache.xml"/>
    <!-- 直接使用hibernate配置 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          p:configLocation="classpath:base/hibernate.cfg.xml"/>
    <!-- ②配置hibernateTemplate Bean-->
    <bean id="hibernateTemplate"
          class="org.springframework.orm.hibernate4.HibernateTemplate"
          p:sessionFactory-ref="sessionFactory"/>
    <bean id="hibernateTransactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>
<!--    <tx:annotation-driven transaction-manager="hibernateTransactionManager"/>-->
<!--    <tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" read-only="true" />-->
<!--            <tx:method name="*" />-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

<!--    <aop:config>-->
<!--        <aop:pointcut id="personServiceOperation"-->
<!--                      expression="execution(* com.yue.first.mapper.EmployeeInfoDaoImpl.*(..))" />-->
<!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="personServiceOperation" />-->
<!--    </aop:config>-->

    <!--    <bean id="basicLogHandlerAdvice" class="com.meituan.supply.chain.annotation.handler.BasicLogHandlerAdvice"/>-->

    <!--    <aop:config expose-proxy="true" proxy-target-class="true">-->
    <!--        <aop:pointcut id="basicLogPointCut"-->
    <!--                      expression="(@annotation(com.meituan.supply.chain.annotation.BasicLog)) || (@within(com.meituan.supply.chain.annotation.BasicLog))"/>-->
    <!--        &lt;!&ndash;给了最高的优先级 &ndash;&gt;-->
    <!--        <aop:advisor order="-2147483648" advice-ref="basicLogHandlerAdvice" pointcut-ref="basicLogPointCut"/>-->
    <!--    </aop:config>-->


    <!--用来初始化配置-->
    <!--    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
    <!--        <property name="locations">-->
    <!--            <list>-->
    <!--                &lt;!&ndash;用来存放和profile相关的配置信息&ndash;&gt;-->
    <!--                &lt;!&ndash;                <value>classpath:config.properties</value>&ndash;&gt;-->
    <!--            </list>-->
    <!--        </property>-->
    <!--    </bean>-->

</beans>

